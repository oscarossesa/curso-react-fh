{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","categories","type","value","onChange","target","getFetchGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","cat","divRoot","document","querySelector","ReactDOM","render"],"mappings":"yMA+BeA,EA5BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAazC,OACE,0BAAMC,SANa,SAACC,GACpBA,EAAEC,iBACFN,GAAc,SAAAO,GAAU,OAAKL,GAAL,mBAAoBK,SAK1C,2BACEC,KAAK,OACLC,MAAOP,EACPQ,SAdoB,SAACL,GACzBF,EAAcE,EAAEM,OAAOF,Y,uBCRdG,EAAa,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACZ,mCACTC,EAFqB,gDAE0BC,UAAUH,GAFpC,6BACZ,oCADY,SAGRI,MAAMF,GAHE,cAGrBG,EAHqB,gBAIJA,EAAKC,OAJD,uBAInBC,EAJmB,EAInBA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVX,kBAcpBM,GAdoB,4CAAH,sDCWXO,EATK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC5B,OACE,yBAAKc,UAAU,0CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCkBKO,EAnBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EACdZ,mBAAS,CACjCmB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,OAMZlC,mBAAS,IANG,6BAiBxC,OATAmC,qBAAU,WACRxB,EAAcC,GACXwB,MAAK,SAAAC,GAAI,OACRH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAEd,CAACpB,IAEGqB,EDbyBK,CAAa1B,GAAhCa,EAFmB,EAEzBN,KAAca,EAFW,EAEXA,QAErB,OACE,oCACE,wBAAIJ,UAAU,qCAAqChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,eAEZ,yBAAKA,UAAU,aAEXH,EAAOJ,KAAI,SAAAC,GAAG,OAAI,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEW3CkB,EAxBM,WAAO,IAAD,EAEWxC,mBAAS,CAAC,cAFrB,mBAElBM,EAFkB,KAENP,EAFM,KASzB,OACE,6BACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEIO,EAAWe,KAAI,SAAAoB,GAAG,OAAI,kBAAC,EAAD,CAASF,IAAKE,EAAK7B,SAAU6B,UCdvDC,G,MAAUC,SAASC,cAAc,UAMvCC,IAASC,OAAO,kBAAC,EAAD,MAAkBJ,I","file":"static/js/main.a37671c0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setCategories(categories => [inputValue, ...categories])\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n        type=\"text\" \r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      ></input>\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const getFetchGifts = async (category) => {\r\n  const apiKey = 'wLdpjbX2u9soMZ5o5BOgZQ0onDEe8hfk';\r\n  const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`\r\n  const resp = await fetch(url)\r\n  const { data } = await resp.json()\r\n\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n\r\n  return gifs\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getGifts } from '../helpers/getGifs'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\nconst GifGrid = ({ category }) => {\r\n \r\n  const {data: images, loading} = useFetchGifs(category)\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n      {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map(img => <GifGridItem key={img.id} {...img} />)\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from 'react'\r\nimport { getFetchGifts } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n\r\n  const [images, setImages] = useState([])\r\n  \r\n  useEffect(() => {\r\n    getFetchGifts(category)\r\n      .then(imgs => \r\n        setstate({\r\n          data: imgs,\r\n          loading: false\r\n        }))      \r\n  }, [category])\r\n\r\n  return state\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from '../components/AddCategory'\r\nimport GifGrid from '../components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One Punch'])\r\n\r\n  // const handleAdd = (e) => {\r\n  //   console.log(e.target.value)\r\n  //   setCategories([e.target.value, ...categories])\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      {/* <button onClick={handleAdd}>Agregar</button> */}\r\n      <ol>\r\n        {\r\n          categories.map(cat => <GifGrid key={cat} category={cat} />)\r\n        }\r\n      </ol>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n// import PrimeraApp from './PrimeraApp';\r\n// import CounterApp from './counter-app/CounterApp';\r\nimport GifExpertApp from './GifExpertApp/GifExpertApp';\r\nimport './index.css'\r\n\r\nconst divRoot = document.querySelector('#root'); \r\n\r\n// ReactDOM.render(<PrimeraApp saludo=\"Hola, Oscar\" />, divRoot);\r\n\r\n// ReactDOM.render(<CounterApp value={10} />, divRoot);\r\n\r\nReactDOM.render(<GifExpertApp />, divRoot);"],"sourceRoot":""}